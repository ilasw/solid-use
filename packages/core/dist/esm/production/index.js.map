{
  "version": 3,
  "sources": ["../../../src/browser/use-media.ts", "../../../src/logical/use-toggle.ts", "../../../src/network/use-network-state.ts", "../../../src/browser/use-event-listener.ts"],
  "sourcesContent": ["import {isServer} from \"solid-js/web\";\nimport {createSignal, onCleanup, onMount} from \"solid-js\";\n\nexport const useMedia = (query: string) => {\n  const [state, setState] = createSignal<null | boolean>(null);\n\n  const mediaQuery = globalThis?.matchMedia(query);\n  const updateValue = () => setState(mediaQuery?.matches);\n\n  onMount(() => {\n    if (isServer) return;\n\n    updateValue();\n\n    if ('addEventListener' in mediaQuery!) {\n      mediaQuery.addEventListener('change', updateValue)\n    } else {\n      mediaQuery?.addListener(updateValue)\n    }\n  });\n\n  onCleanup(() => {\n    if (isServer) return;\n\n    if ('removeEventListener' in mediaQuery!) {\n      mediaQuery!.removeEventListener('change', updateValue)\n    } else {\n      mediaQuery!.removeListener(updateValue)\n    }\n  })\n\n  return state;\n}", "import {createSignal} from \"solid-js\";\n\nexport const useToggle = (initialStatus: boolean) => {\n  const [state, setState] = createSignal(initialStatus);\n  const toggle = () => setState(!state());\n\n  return [state, toggle];\n}", "import {createSignal} from \"solid-js\";\nimport {useEventListener} from \"@/browser/use-event-listener\";\nimport {isServer} from \"solid-js/web\";\n\nexport const useNetworkState = () => {\n  const [state, setState] = createSignal<{ isOnline: boolean | null }>({isOnline: null});\n\n  const updateNetworkInformation = () => {\n    if (isServer || !navigator) return;\n    setState({isOnline: navigator.onLine})\n  }\n\n  updateNetworkInformation();\n  useEventListener('offline', updateNetworkInformation, {passive: true});\n  useEventListener('online', updateNetworkInformation, {passive: true});\n\n  return state;\n}", "import {onCleanup, onMount} from \"solid-js\";\nimport {isServer} from \"solid-js/web\";\n\nexport const useEventListener = <E extends keyof WindowEventMap>(\n    event: E,\n    callback: (this: Window, ev: WindowEventMap[E]) => any,\n    options: boolean | AddEventListenerOptions = {}\n) => {\n\n  onMount(() => {\n    if (isServer) return;\n    globalThis.addEventListener(event, callback, options);\n  });\n\n  onCleanup(() => {\n    if (isServer) return;\n    globalThis.removeEventListener(event, callback);\n  });\n}"],
  "mappings": "AAAA,wCACA,oEAEO,GAAM,GAAW,AAAC,GAAkB,CACzC,GAAM,CAAC,EAAO,GAAY,EAA6B,IAAI,EAErD,EAAa,mCAAY,WAAW,GACpC,EAAc,IAAM,EAAS,iBAAY,OAAO,EAEtD,SAAQ,IAAM,CACZ,AAAI,GAEJ,GAAY,EAEZ,AAAI,oBAAsB,GACxB,EAAW,iBAAiB,SAAU,CAAW,EAEjD,WAAY,YAAY,GAE5B,CAAC,EAED,EAAU,IAAM,CACd,AAAI,GAEJ,CAAI,uBAAyB,GAC3B,EAAY,oBAAoB,SAAU,CAAW,EAErD,EAAY,eAAe,CAAW,EAE1C,CAAC,EAEM,CACT,EChCA,wCAEO,GAAM,GAAY,AAAC,GAA2B,CACnD,GAAM,CAAC,EAAO,GAAY,EAAa,CAAa,EAGpD,MAAO,CAAC,EAFO,IAAM,EAAS,CAAC,EAAM,CAAC,CAEjB,CACvB,ECPA,wCCAA,kDACA,wCAEO,GAAM,GAAmB,CAC5B,EACA,EACA,EAA6C,CAAC,IAC7C,CAEH,EAAQ,IAAM,CACZ,AAAI,GACJ,WAAW,iBAAiB,EAAO,EAAU,CAAO,CACtD,CAAC,EAED,EAAU,IAAM,CACd,AAAI,GACJ,WAAW,oBAAoB,EAAO,CAAQ,CAChD,CAAC,CACH,EDhBA,wCAEO,GAAM,GAAkB,IAAM,CACnC,GAAM,CAAC,EAAO,GAAY,EAA2C,CAAC,SAAU,IAAI,CAAC,EAE/E,EAA2B,IAAM,CACrC,AAAI,GAAY,CAAC,WACjB,EAAS,CAAC,SAAU,UAAU,MAAM,CAAC,CACvC,EAEA,SAAyB,EACzB,EAAiB,UAAW,EAA0B,CAAC,QAAS,EAAI,CAAC,EACrE,EAAiB,SAAU,EAA0B,CAAC,QAAS,EAAI,CAAC,EAE7D,CACT",
  "names": []
}
